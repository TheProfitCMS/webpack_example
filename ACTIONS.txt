mkdir webpack_example
cd webpack_example

npm list
npm list -g

npm install webpack -g

================================
usr/local/lib
└─┬ webpack@1.12.11
  ├── async@1.5.2
  ├── clone@1.0.2
  ├─┬ enhanced-resolve@0.9.1
  │ ├── graceful-fs@4.1.2
  │ └── memory-fs@0.2.0
  ├── esprima@2.7.1
  ├── interpret@0.6.6
  ├─┬ loader-utils@0.2.12
  │ ├── big.js@3.1.3
  │ └── json5@0.4.0
  ├─┬ memory-fs@0.3.0
  │ ├─┬ errno@0.1.4
  │ │ └── prr@0.0.0
  │ └─┬ readable-stream@2.0.5
  │   ├── core-util-is@1.0.2
  │   ├── inherits@2.0.1
  │   ├── isarray@0.0.1
  │   ├── process-nextick-args@1.0.6
  │   └── util-deprecate@1.0.2
  ├─┬ mkdirp@0.5.1
  │ └── minimist@0.0.8
  ├─┬ node-libs-browser@0.5.3
  │ ├── assert@1.3.0
  │ ├─┬ browserify-zlib@0.1.4
  │ │ └── pako@0.2.8
  │ ├─┬ buffer@3.6.0
  │ │ ├── base64-js@0.0.8
  │ │ ├── ieee754@1.1.6
  │ │ └── isarray@1.0.0
  │ ├─┬ console-browserify@1.1.0
  │ │ └── date-now@0.1.4
  │ ├── constants-browserify@0.0.1
  │ ├─┬ crypto-browserify@3.2.8
  │ │ ├── pbkdf2-compat@2.0.1
  │ │ ├── ripemd160@0.2.0
  │ │ └── sha.js@2.2.6
  │ ├── domain-browser@1.1.7
  │ ├── events@1.1.0
  │ ├─┬ http-browserify@1.7.0
  │ │ └── Base64@0.2.1
  │ ├── https-browserify@0.0.0
  │ ├── os-browserify@0.1.2
  │ ├── path-browserify@0.0.0
  │ ├── process@0.11.2
  │ ├── punycode@1.4.0
  │ ├── querystring-es3@0.2.1
  │ ├── readable-stream@1.1.13
  │ ├─┬ stream-browserify@1.0.0
  │ │ └── readable-stream@1.1.13
  │ ├── string_decoder@0.10.31
  │ ├── timers-browserify@1.4.2
  │ ├── tty-browserify@0.0.0
  │ ├─┬ url@0.10.3
  │ │ ├── punycode@1.3.2
  │ │ └── querystring@0.2.0
  │ ├── util@0.10.3
  │ └─┬ vm-browserify@0.0.4
  │   └── indexof@0.0.1
  ├─┬ optimist@0.6.1
  │ └── wordwrap@0.0.3
  ├─┬ supports-color@3.1.2
  │ └── has-flag@1.0.0
  ├── tapable@0.1.10
  ├─┬ uglify-js@2.6.1
  │ ├── async@0.2.10
  │ ├── source-map@0.5.3
  │ ├── uglify-to-browserify@1.0.2
  │ └─┬ yargs@3.10.0
  │   ├── camelcase@1.2.1
  │   ├─┬ cliui@2.1.0
  │   │ ├─┬ center-align@0.1.2
  │   │ │ ├─┬ align-text@0.1.3
  │   │ │ │ ├── kind-of@2.0.1
  │   │ │ │ ├── longest@1.0.1
  │   │ │ │ └── repeat-string@1.5.2
  │   │ │ └── lazy-cache@0.2.7
  │   │ ├── right-align@0.1.3
  │   │ └── wordwrap@0.0.2
  │   ├─┬ decamelize@1.1.2
  │   │ └── escape-string-regexp@1.0.4
  │   └── window-size@0.1.0
  ├─┬ watchpack@0.2.9
  │ ├── async@0.9.2
  │ └─┬ chokidar@1.4.2
  │   ├─┬ anymatch@1.3.0
  │   │ ├── arrify@1.0.1
  │   │ └─┬ micromatch@2.3.7
  │   │   ├─┬ arr-diff@2.0.0
  │   │   │ └── arr-flatten@1.0.1
  │   │   ├── array-unique@0.2.1
  │   │   ├─┬ braces@1.8.3
  │   │   │ ├─┬ expand-range@1.8.1
  │   │   │ │ └─┬ fill-range@2.2.3
  │   │   │ │   ├─┬ is-number@2.1.0
  │   │   │ │   │ └── kind-of@3.0.2
  │   │   │ │   ├── isobject@2.0.0
  │   │   │ │   └─┬ randomatic@1.1.5
  │   │   │ │     └── kind-of@3.0.2
  │   │   │ ├── preserve@0.2.0
  │   │   │ └── repeat-element@1.1.2
  │   │   ├── expand-brackets@0.1.4
  │   │   ├── extglob@0.3.2
  │   │   ├── filename-regex@2.0.0
  │   │   ├─┬ kind-of@3.0.2
  │   │   │ └── is-buffer@1.1.1
  │   │   ├── normalize-path@2.0.1
  │   │   ├─┬ object.omit@2.0.0
  │   │   │ ├─┬ for-own@0.1.3
  │   │   │ │ └── for-in@0.1.4
  │   │   │ └── is-extendable@0.1.1
  │   │   ├─┬ parse-glob@3.0.4
  │   │   │ ├── glob-base@0.3.0
  │   │   │ └── is-dotfile@1.0.2
  │   │   └─┬ regex-cache@0.4.2
  │   │     ├── is-equal-shallow@0.1.3
  │   │     └── is-primitive@2.0.0
  │   ├── async-each@0.1.6
  │   ├─┬ fsevents@1.0.6
  │   │ ├── nan@2.2.0
  │   │ └─┬ node-pre-gyp@0.6.17
  │   │   ├─┬ mkdirp@0.5.1
  │   │   │ └── minimist@0.0.8
  │   │   ├─┬ nopt@3.0.6
  │   │   │ └── abbrev@1.0.7
  │   │   ├─┬ npmlog@2.0.0
  │   │   │ ├── ansi@0.3.0
  │   │   │ ├─┬ are-we-there-yet@1.0.4
  │   │   │ │ ├── delegates@0.1.0
  │   │   │ │ └─┬ readable-stream@1.1.13
  │   │   │ │   ├── core-util-is@1.0.2
  │   │   │ │   ├── isarray@0.0.1
  │   │   │ │   └── string_decoder@0.10.31
  │   │   │ └─┬ gauge@1.2.2
  │   │   │   ├── has-unicode@1.0.1
  │   │   │   ├─┬ lodash.pad@3.1.1
  │   │   │   │ ├── lodash._basetostring@3.0.1
  │   │   │   │ └─┬ lodash._createpadding@3.6.1
  │   │   │   │   └── lodash.repeat@3.0.1
  │   │   │   ├── lodash.padleft@3.1.1
  │   │   │   └── lodash.padright@3.1.1
  │   │   ├─┬ rc@1.1.5
  │   │   │ ├── deep-extend@0.4.0
  │   │   │ ├── ini@1.3.4
  │   │   │ ├── minimist@1.2.0
  │   │   │ └── strip-json-comments@1.0.4
  │   │   ├─┬ request@2.67.0
  │   │   │ ├── aws-sign2@0.6.0
  │   │   │ ├─┬ bl@1.0.0
  │   │   │ │ └─┬ readable-stream@2.0.4
  │   │   │ │   ├── core-util-is@1.0.2
  │   │   │ │   ├── inherits@2.0.1
  │   │   │ │   ├── isarray@0.0.1
  │   │   │ │   ├── process-nextick-args@1.0.3
  │   │   │ │   ├── string_decoder@0.10.31
  │   │   │ │   └── util-deprecate@1.0.2
  │   │   │ ├── caseless@0.11.0
  │   │   │ ├─┬ combined-stream@1.0.5
  │   │   │ │ └── delayed-stream@1.0.0
  │   │   │ ├── extend@3.0.0
  │   │   │ ├── forever-agent@0.6.1
  │   │   │ ├─┬ form-data@1.0.0-rc3
  │   │   │ │ └── async@1.5.0
  │   │   │ ├─┬ har-validator@2.0.3
  │   │   │ │ ├─┬ chalk@1.1.1
  │   │   │ │ │ ├── ansi-styles@2.1.0
  │   │   │ │ │ ├── escape-string-regexp@1.0.3
  │   │   │ │ │ ├─┬ has-ansi@2.0.0
  │   │   │ │ │ │ └── ansi-regex@2.0.0
  │   │   │ │ │ ├── strip-ansi@3.0.0
  │   │   │ │ │ └── supports-color@2.0.0
  │   │   │ │ ├─┬ commander@2.9.0
  │   │   │ │ │ └── graceful-readlink@1.0.1
  │   │   │ │ ├─┬ is-my-json-valid@2.12.3
  │   │   │ │ │ ├── generate-function@2.0.0
  │   │   │ │ │ ├─┬ generate-object-property@1.2.0
  │   │   │ │ │ │ └── is-property@1.0.2
  │   │   │ │ │ ├── jsonpointer@2.0.0
  │   │   │ │ │ └── xtend@4.0.1
  │   │   │ │ └─┬ pinkie-promise@2.0.0
  │   │   │ │   └── pinkie@2.0.1
  │   │   │ ├─┬ hawk@3.1.2
  │   │   │ │ ├── boom@2.10.1
  │   │   │ │ ├── cryptiles@2.0.5
  │   │   │ │ ├── hoek@2.16.3
  │   │   │ │ └── sntp@1.0.9
  │   │   │ ├─┬ http-signature@1.1.0
  │   │   │ │ ├── assert-plus@0.1.5
  │   │   │ │ ├─┬ jsprim@1.2.2
  │   │   │ │ │ ├── extsprintf@1.0.2
  │   │   │ │ │ ├── json-schema@0.2.2
  │   │   │ │ │ └── verror@1.3.6
  │   │   │ │ └─┬ sshpk@1.7.0
  │   │   │ │   ├── asn1@0.2.3
  │   │   │ │   ├── assert-plus@0.2.0
  │   │   │ │   ├── dashdash@1.10.1
  │   │   │ │   ├── ecc-jsbn@0.1.1
  │   │   │ │   ├── jodid25519@1.0.2
  │   │   │ │   ├── jsbn@0.1.0
  │   │   │ │   └── tweetnacl@0.13.2
  │   │   │ ├── is-typedarray@1.0.0
  │   │   │ ├── isstream@0.1.2
  │   │   │ ├── json-stringify-safe@5.0.1
  │   │   │ ├─┬ mime-types@2.1.7
  │   │   │ │ └── mime-db@1.19.0
  │   │   │ ├── node-uuid@1.4.7
  │   │   │ ├── oauth-sign@0.8.0
  │   │   │ ├── qs@5.2.0
  │   │   │ ├── stringstream@0.0.5
  │   │   │ ├── tough-cookie@2.2.1
  │   │   │ └── tunnel-agent@0.4.1
  │   │   ├─┬ rimraf@2.4.4
  │   │   │ └─┬ glob@5.0.15
  │   │   │   ├─┬ inflight@1.0.4
  │   │   │   │ └── wrappy@1.0.1
  │   │   │   ├── inherits@2.0.1
  │   │   │   ├─┬ minimatch@3.0.0
  │   │   │   │ └─┬ brace-expansion@1.1.1
  │   │   │   │   ├── balanced-match@0.2.1
  │   │   │   │   └── concat-map@0.0.1
  │   │   │   ├─┬ once@1.3.3
  │   │   │   │ └── wrappy@1.0.1
  │   │   │   └── path-is-absolute@1.0.0
  │   │   ├── semver@5.1.0
  │   │   ├─┬ tar@2.2.1
  │   │   │ ├── block-stream@0.0.8
  │   │   │ ├── fstream@1.0.8
  │   │   │ └── inherits@2.0.1
  │   │   └─┬ tar-pack@3.1.0
  │   │     ├── debug@0.7.4
  │   │     ├─┬ fstream-ignore@1.0.3
  │   │     │ └─┬ minimatch@3.0.0
  │   │     │   └─┬ brace-expansion@1.1.1
  │   │     │     ├── balanced-match@0.2.1
  │   │     │     └── concat-map@0.0.1
  │   │     ├── graceful-fs@4.1.2
  │   │     ├── once@1.1.1
  │   │     ├─┬ readable-stream@1.0.33
  │   │     │ ├── core-util-is@1.0.2
  │   │     │ ├── inherits@2.0.1
  │   │     │ ├── isarray@0.0.1
  │   │     │ └── string_decoder@0.10.31
  │   │     ├── rimraf@2.2.8
  │   │     └── uid-number@0.0.3
  │   ├── glob-parent@2.0.0
  │   ├─┬ is-binary-path@1.0.1
  │   │ └── binary-extensions@1.4.0
  │   ├─┬ is-glob@2.0.1
  │   │ └── is-extglob@1.0.0
  │   ├── path-is-absolute@1.0.0
  │   └─┬ readdirp@2.0.0
  │     └─┬ minimatch@2.0.10
  │       └─┬ brace-expansion@1.1.2
  │         ├── balanced-match@0.3.0
  │         └── concat-map@0.0.1
  └─┬ webpack-core@0.6.8
    ├── source-list-map@0.1.5
    └─┬ source-map@0.4.4
      └── amdefine@1.0.0
================================

touch index.html

```
<!DOCTYPE html>
<html>
  <head>
    <title>Webpack Example</title>
    <meta charset="utf-8">
    <script src='application.js'></script>
  </head>
  <body>
    WebPack example
  </body>
</html>
```

touch log.js

```
'use strict';

window.log = function() {
  try {
    return console.log.apply(console, arguments);
  } catch (_error) {}
};
```

touch app.js

```
'use strict';

let log = require('./log');

log('Hello World!');
```

touch webpack.config.js

```
'use strict';

module.exports = {
  entry: './app.js',
  output: {
    filename: 'application.js'
  }
}
```

(!) let not work in Firefox

SyntaxError: let is a reserved identifier
let log = __webpack_require__(1);
application.js (line 49, col 1)

index.html

```
<!DOCTYPE html>
<html>
  <head>
    <title>Webpack Example</title>
    <meta charset="utf-8">
    <script src='application.js' type="application/javascript;version=1.7"></script>
  </head>
  <body>
    WebPack example
  </body>
</html>
```

touch app.js

```
'use strict';
log = require('./log');
log('Hello World!');
```

ReferenceError: assignment to undeclared variable log

### Преобразование файловой структуры

===

mkdir src
mkdir src/assets
mkdir src/assets/images
mkdir src/assets/stylesheets
mkdir src/assets/javascripts
mkdir src/assets/javascripts/components

touch src/assets/images/.keep
touch src/assets/javascripts/.keep
touch src/assets/stylesheets/.keep
touch src/assets/javascripts/components/.keep

mkdir public
mv index.html public/index.html

rm application.js
mv app.js src/assets/javascripts/
mv log.js src/assets/javascripts/components/

```
├── ACTIONS.txt
├── public
│   └── index.html
├── src
│   └── assets
│       ├── images
│       ├── javascripts
│       │   ├── app.js
│       │   └── components
│       │       └── log.js
│       └── stylesheets
└── webpack.config.js
```

src/assets/javascripts/app.js

```
'use strict';
let log = require('./components/log');
log('Hello World!');
```

webpack.config.js

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/src/assets',
  entry: './javascripts/app.js',

  output: {
    filename: './public/assets/javascripts/application.js'
  }
}
```

public/index.html
```html
<!DOCTYPE html>
<html>
  <head>
    <title>Webpack Example</title>
    <meta charset="utf-8">
    <script src='assets/javascripts/application.js' type="application/javascript;version=1.7"></script>
  </head>
  <body>
    WebPack example
  </body>
</html>
```

webpack

```
├── ACTIONS.txt
├── public
│   ├── assets
│   │   └── javascripts
│   │       └── application.js
│   └── index.html
├── src
│   └── assets
│       ├── images
│       ├── javascripts
│       │   ├── app.js
│       │   └── components
│       │       └── log.js
│       └── stylesheets
└── webpack.config.js
```

### 3

google:// webpack config output
>> https://webpack.github.io/docs/configuration.html#output-path

> output.path
> The output directory as absolute path (required).

webpack.config.js

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/src/assets',
  entry: './javascripts/app.js',

  output: {
    path: __dirname + '/public/assets',
    filename: './javascripts/application.js'
  }
}
```

webpack.config.js

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/src/assets',
  entry: {
    app: './javascripts/app.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js"
  }
}
```

```
public/assets/
└── javascripts
    ├── app.js
    └── application.js
```

rm public/assets/javascripts/app.js
mv src/assets/javascripts/app.js src/assets/javascripts/application.js

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js"
  }
}
```

```
├── ACTIONS.txt
├── public
│   ├── assets
│   │   └── javascripts
│   │       └── application.js
│   └── index.html
├── src
│   └── assets
│       ├── images
│       ├── javascripts
│       │   ├── application.js
│       │   └── components
│       │       └── log.js
│       └── stylesheets
└── webpack.config.js
```

# Export function + Export to global

src/assets/javascripts/application.js

```
'use strict';

let log = require('./components/log');

// EXPORT to Global
window.log = log;

// EXPORT to common var
exports.log = log;
```

webpack.config.js

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  }
}
```

> log(1)
> app.log(1)

# MOVE

mv src __src

```
'use strict';

module.exports = {
  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  }
}
```

```
├── ACTIONS.txt
├── __src
│   └── assets
│       ├── images
│       ├── javascripts
│       │   ├── application.js
│       │   └── components
│       │       └── log.js
│       └── stylesheets
├── public
│   ├── assets
│   │   └── javascripts
│   │       └── application.js
│   └── index.html
└── webpack.config.js
```

# WATCH

```
'use strict';

module.exports = {
  watch: true,

  watchOptions: {
    aggregateTimeout: 100
  },

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  }
}
```

```
Hash: 32eb852415e7dff99e79
Version: webpack 1.12.11
Time: 63ms
                       Asset     Size  Chunks             Chunk Names
./javascripts/application.js  1.74 kB       0  [emitted]  application
   [0] ./javascripts/application.js 136 bytes {0} [built]
    + 1 hidden modules

Hash: ff924e84cc760d895e9c
Version: webpack 1.12.11
Time: 19ms
                       Asset     Size  Chunks             Chunk Names
./javascripts/application.js  1.76 kB       0  [emitted]  application
   [0] ./javascripts/application.js 158 bytes {0} [built]
    + 1 hidden modules
```

### Source Map

https://webpack.github.io/docs/configuration.html#devtool

```
'use strict';

module.exports = {
  watch: true,

  watchOptions: {
    aggregateTimeout: 100
  },

  // cheap-inline-module-source-map
  devtool: "source-map",

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  }
}
```

### ENV development | production

```
'use strict';

const NODE_ENV = process.env.NODE_ENV || 'development';
console.log(`NODE ENV => ${ NODE_ENV }`);

const DEV_MODE = NODE_ENV == 'development';
console.log(`DEV MODE => ${ DEV_MODE }`);

// cheap-inline-module-source-map | source-map
const SOURCE_MAP_TYPE = DEV_MODE ? 'source-map' : null;

module.exports = {
  watch: DEV_MODE,

  watchOptions: {
    aggregateTimeout: 100
  },

  devtool: SOURCE_MAP_TYPE,

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  }
}
```

$ NODE_ENV=production webpack

$ webpack

### Pass Vars from Webpack to scripts

> https://twitter.com/dan_abramov/status/592692202335301636
> http://stackoverflow.com/questions/28572380/conditional-build-based-on-environment-using-webpack
> http://stackoverflow.com/questions/28145397/injecting-variables-into-webpack

npm install webpack

```
'use strict';

const NODE_ENV = process.env.NODE_ENV || 'development';
console.log(`NODE ENV => ${ NODE_ENV }`);

const DEV_MODE = NODE_ENV == 'development';
console.log(`DEV MODE => ${ DEV_MODE }`);

// cheap-inline-module-source-map | source-map
const SOURCE_MAP_TYPE = DEV_MODE ? 'source-map' : null;

const webpack = require('webpack');

module.exports = {
  watch: DEV_MODE,

  watchOptions: {
    aggregateTimeout: 100
  },

  devtool: SOURCE_MAP_TYPE,

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',
  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  },

  plugins: [
    new webpack.DefinePlugin({
      NODE_ENV: JSON.stringify(NODE_ENV),
      DEV_MODE: DEV_MODE
    })
  ]
}
```

__src/assets/javascripts/application.js

```
'use strict';

let log = require('./components/log');

// EXPORT to Global
window.log = log;


if(DEV_MODE){
  log("Hello World!");
}

// EXPORT to common var
exports.log = log;
```

NODE_ENV=production webpack

public/assets/javascripts/application.js

```
  if(false){
    log("Hello World!");
  }
```

npm init

`npm install <pkg> --save`

touch .gitignore

echo "node_modules" >> .gitignore
echo ".DS_Store"    >> .gitignore

### BABEL

npm install babel-loader babel-core babel-preset-es2015 babel-preset-react babel-plugin-transform-runtime --save

```
'use strict';

const NODE_ENV = process.env.NODE_ENV || 'development';
console.log(`NODE ENV => ${ NODE_ENV }`);

const DEV_MODE = NODE_ENV == 'development';
console.log(`DEV MODE => ${ DEV_MODE }`);

// cheap-inline-module-source-map | source-map
const SOURCE_MAP_TYPE = DEV_MODE ? 'source-map' : null;

const webpack = require('webpack');

module.exports = {
  watch: DEV_MODE,

  watchOptions: {
    aggregateTimeout: 100
  },

  devtool: SOURCE_MAP_TYPE,

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',

  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  },

  plugins: [
    new webpack.DefinePlugin({
      NODE_ENV: JSON.stringify(NODE_ENV),
      DEV_MODE: DEV_MODE
    })
  ],

  module: {
    loaders: [{
      test: /\.jsx?$/,
      exclude: /(node_modules|bower_components)/,
      loader: 'babel',
      query: {
        presets: ['react', 'es2015']
      }
    }]
  }
}
```

### BABEL optimize code

```
'use strict';

const NODE_ENV = process.env.NODE_ENV || 'development';
console.log(`NODE ENV => ${ NODE_ENV }`);

const DEV_MODE = NODE_ENV == 'development';
console.log(`DEV MODE => ${ DEV_MODE }`);

// cheap-inline-module-source-map | source-map
const SOURCE_MAP_TYPE = DEV_MODE ? 'source-map' : null;

const webpack = require('webpack');

module.exports = {
  watch: DEV_MODE,

  watchOptions: {
    aggregateTimeout: 100
  },

  devtool: SOURCE_MAP_TYPE,

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',

  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  },

  plugins: [
    new webpack.DefinePlugin({
      NODE_ENV: JSON.stringify(NODE_ENV),
      DEV_MODE: DEV_MODE
    })
  ],

  module: {
    loaders: [{
      test: /\.jsx?$/,
      exclude: /(node_modules|bower_components)/,
      loader: 'babel',
      query: {
        presets: ['react', 'es2015'],
        plugins: ['transform-runtime']
      }
    }]
  }
}
```

### UglifyJS

```
'use strict';

const NODE_ENV = process.env.NODE_ENV || 'development';
console.log(`NODE ENV => ${ NODE_ENV }`);

// $ webpack
// $ NODE_ENV=development webpack
const DEV_MODE = NODE_ENV == 'development';
console.log(`DEV MODE => ${ DEV_MODE }`);

// $ NODE_ENV=production webpack
const PROD_MODE = NODE_ENV == 'production';
console.log(`PROD MODE => ${ PROD_MODE }`);

// cheap-inline-module-source-map | source-map
const SOURCE_MAP_TYPE = DEV_MODE ? 'source-map' : null;

const webpack = require('webpack');

module.exports = {
  watch: DEV_MODE,

  watchOptions: {
    aggregateTimeout: 100
  },

  devtool: SOURCE_MAP_TYPE,

  // the base path which will be used to resolve entry points
  context: __dirname + '/__src/assets',

  entry: {
    application: './javascripts/application.js'
  },

  output: {
    path: __dirname + '/public/assets',
    filename: "./javascripts/[name].js",
    library: 'app'
  },

  plugins: [
    new webpack.DefinePlugin({
      NODE_ENV: JSON.stringify(NODE_ENV),
      DEV_MODE: DEV_MODE
    })
  ],

  module: {
    loaders: [{
      test: /\.jsx?$/,
      exclude: /(node_modules|bower_components)/,
      loader: 'babel',
      query: {
        presets: ['react', 'es2015'],
        plugins: ['transform-runtime']
      }
    }]
  }
}

if(PROD_MODE){
 module.exports.plugins.push(
  new webpack.optimize.UglifyJsPlugin({
    compress: {
      warnings: true
    }
  })
 );
}
```

NODE_ENV=production webpack